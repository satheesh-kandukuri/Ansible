---
- name: Create MySQL user and grant privileges in RDS
  hosts: localhost
  gather_facts: no
  vars:
    aws_region: "us-west-2"
    master_secret_name: "rds-mysql-master-04-credentials"
    app_secret_name: "rds-mysql-app-04-user-credentials"
    
  tasks:
    - name: Install required Python packages
      pip:
        name:
          - boto3
          - pymysql
        state: present
      delegate_to: localhost

    - name: Retrieve master credentials from Secrets Manager using AWS CLI
      command: >
        aws secretsmanager get-secret-value
        --secret-id {{ master_secret_name }}
        --region {{ aws_region }}
        --query SecretString
        --output text
      register: master_secret_raw
      changed_when: false

    - name: Parse master secret JSON
      set_fact:
        master_creds: "{{ master_secret_raw.stdout | from_json }}"

    - name: Retrieve app user credentials from Secrets Manager using AWS CLI
      command: >
        aws secretsmanager get-secret-value
        --secret-id {{ app_secret_name }}
        --region {{ aws_region }}
        --query SecretString
        --output text
      register: app_secret_raw
      changed_when: false

    - name: Parse app user secret JSON
      set_fact:
        app_creds: "{{ app_secret_raw.stdout | from_json }}"

    - name: Display connection info (for debugging - remove in production)
      debug:
        msg: "Connecting to {{ master_creds.host }}:{{ master_creds.port }}"

    - name: Create MySQL application user
      community.mysql.mysql_user:
        login_host: "{{ master_creds.host }}"
        login_port: "{{ master_creds.port }}"
        login_user: "{{ master_creds.username }}"
        login_password: "{{ master_creds.password }}"
        name: "{{ app_creds.username }}"
        password: "{{ app_creds.password }}"
        host: "%"
        state: present
      no_log: true

    - name: Grant read and write privileges to application user
      community.mysql.mysql_query:
        login_host: "{{ master_creds.host }}"
        login_port: "{{ master_creds.port }}"
        login_user: "{{ master_creds.username }}"
        login_password: "{{ master_creds.password }}"
        query:
          - "GRANT SELECT, INSERT, UPDATE, DELETE ON {{ master_creds.dbname }}.* TO '{{ app_creds.username }}'@'%'"
          - "FLUSH PRIVILEGES"
      no_log: true

    - name: Verify user privileges
      community.mysql.mysql_query:
        login_host: "{{ master_creds.host }}"
        login_port: "{{ master_creds.port }}"
        login_user: "{{ master_creds.username }}"
        login_password: "{{ master_creds.password }}"
        query: "SHOW GRANTS FOR '{{ app_creds.username }}'@'%'"
      register: user_grants

    - name: Display user privileges
      debug:
        msg: "{{ user_grants.query_result }}"